{"ast":null,"code":"import _defineProperty from \"/Users/nihilism/team_project/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.string.trim.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Modal from './common/AlertModal.vue';\nexport default {\n  data: function data() {\n    return _defineProperty({\n      newTodoItem: '',\n      showModal: false,\n      categoryTodoitem: ''\n    }, \"showModal\", false);\n  },\n  methods: {\n    addTodo: function addTodo() {\n      if (this.newTodoItem !== \"\") {\n        var value = this.newTodoItem && this.newTodoItem.trim();\n        this.$emit('addTodo', value);\n        this.clearAddTodo();\n      } else {\n        this.showModal = !this.showModal;\n      }\n    },\n    addCategory: function addCategory() {\n      if (this.categoryTodoitem !== \"\") {\n        var value = this.categoryTodoitem && this.categoryTodoitem.trim();\n        this.$emit('addCategory', value);\n        this.clearAddCategory();\n      } else {\n        this.showModal = !this.showModal;\n      }\n    },\n    clearAddTodo: function clearAddTodo() {\n      this.newTodoItem = '';\n    },\n    clearAddCategory: function clearAddCategory() {\n      this.categoryTodoitem = '';\n    }\n  },\n  components: {\n    Modal: Modal\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,qBADA;AAEAC,sBAFA;AAGAC;AAHA,oBAIA,KAJA;AAMA,GARA;AASAC;AACAC,WADA,qBACA;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA,KATA;AAUAC,eAVA,yBAUA;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA,KAlBA;AAmBAC,gBAnBA,0BAmBA;AACA;AACA,KArBA;AAsBAC,oBAtBA,8BAsBA;AACA;AACA;AAxBA,GATA;AAmCAC;AACAC;AADA;AAnCA","names":["data","newTodoItem","showModal","categoryTodoitem","methods","addTodo","addCategory","clearAddTodo","clearAddCategory","components","Modal"],"sourceRoot":"src/components","sources":["TodoInput.vue"],"sourcesContent":["<template>\n  <div class=\"inputBox shadow\">\n    <input type=\"text\" v-model=\"newTodoItem\" placeholder=\"할일을 입력하세요\" v-on:keyup.enter=\"addTodo\">\n    <input type=\"text\" v-model=\"categoryTodoItem\" placeholder=\"카테고리를 입력하세요\" v-on:keyup.enter=\"addCategory\">\n    <span class=\"addContainer\" v-on:click=\"addTodo\" @click=\"addCategory\" >\n      <i class=\"addBtn fas fa-plus\" aria-hidden=\"true\"></i>\n    </span>\n    <modal v-if=\"showModal\" @close=\"showModal = false\">\n      \n      <h3 slot=\"header\">경고</h3>\n      <span slot=\"footer\" @click=\"showModal = false\">빈칸을 모두 채워주세요.\n        <i class=\"closeModalBtn fas fa-times\" aria-hidden=\"true\"></i>\n      </span>\n    </modal>\n  </div>\n</template>\n\n<script>\nimport Modal from './common/AlertModal.vue'\n\nexport default {\n  data() {\n    return {\n      newTodoItem: '',\n      showModal: false,\n      categoryTodoitem: '',\n      showModal: false\n    }\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodoItem !== \"\") {\n        var value = this.newTodoItem && this.newTodoItem.trim();\n\t\t\t\tthis.$emit('addTodo', value)\n        this.clearAddTodo();\n      } else {\n        this.showModal = !this.showModal;\n      }\n    },\n    addCategory() {\n      if (this.categoryTodoitem !== \"\") {\n        var value = this.categoryTodoitem && this.categoryTodoitem.trim();\n        this.$emit('addCategory', value)\n        this.clearAddCategory();\n      } else {\n        this.showModal = !this.showModal;\n      }\n    },\n    clearAddTodo() {\n      this.newTodoItem = '';\n    },\n    clearAddCategory() {\n      this.categoryTodoitem = '';\n    }\n  },\n  components: {\n    Modal: Modal\n  }\n}\n</script>\n\n<style scoped>\ninput:focus {\n  outline: none;\n}\n.inputBox {\n  background: white;\n  height: 50px;\n  line-height: 50px;\n  border-radius: 5px;\n}\n.inputBox input {\n  border-style: none;\n  font-size: 0.9rem;\n}\n.addContainer {\n  float: right;\n  background: linear-gradient(to left, #ffe7a3, #6667ab);\n  display: inline-block;\n  width: 3rem;\n  border-radius: 0 5px 5px 0;\n}\n.addBtn {\n  color: white;\n  vertical-align: middle;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}